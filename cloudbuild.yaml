steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/myapp:latest', '-t', 'gcr.io/$PROJECT_ID/myapp:$BUILD_ID', '-t', 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA', '.']
    id: 'build-image-myapp'
    waitFor: ['-']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA']
    id: 'push-image-to-container-registry'
    waitFor: ['build-image-myapp']
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
    - 'run'
    - 'deploy'
    - 'myawesomeapp'
    - '--image'
    - 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA'
    - '--region'
    - 'us-east4'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    id: 'deploy-to-cloud-run'
    waitFor: ['push-image-to-container-registry']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    volumes:
    - name: 'vol1'
      path: /${_VOLUME_PATH}
    entrypoint: '/bin/${_SHELL}'
    args: ['-c', 'gcloud builds log $BUILD_ID > buildlog.log']
    id: 'fetch-build-log'
    waitFor: ['deploy-to-cloud-run']
  - name: $_SHELL
    volumes:
    - name: 'vol1'
      path: /${_VOLUME_PATH}
    args: ['mkdir', 'app']
    waitFor: ['fetch-build-log']
    id: 'create-app-directory'
  - name: $_SHELL
    volumes:
    - name: 'vol1'
      path: /${_VOLUME_PATH}
    args: ['mv', 'public', 'views', 'app.js', 'package.json', 'Dockerfile', 'app']
    waitFor: ['create-app-directory']
    id: 'moving-appfiles'
  - name: $_SHELL
    volumes:
    - name: 'vol1'
      path: /${_VOLUME_PATH}
    args: ['tar', '-czvf', 'artifacts.tar.gz', 'app', 'buildlog.log']
    waitFor: ['moving-appfiles']
    id: 'create-artifacts-zip'
  substitutions: 
      _SHELL: 'bash'
      _VOLUME_PATH: 'personalPartition'
  images:
  - 'gcr.io/$PROJECT_ID/myapp:latest'
  - 'gcr.io/$PROJECT_ID/myapp:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/myapp:$COMMIT_SHA'
  artifacts:
    objects:
      location: 'gs://jarylbucket-$PROJECT_ID/$BUILD_ID'
      paths: ['artifacts.tar.gz']
  # steps:
  # - name: 'node:$_NODE_VER'
  #   entrypoint: 'npm'
  #   args: ['install']
  #   id: 'nodeNpmInstall'
  #
